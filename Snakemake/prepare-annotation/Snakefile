import os

configfile:"species-specific-configs/Base_config.yaml"

rule all:
    input:
        config["species"]+"/rRNA/rRNA_index/rRNA_bowtie.1.ebwt",
        config["species"]+"/snRNA/canonical_snRNA_index/canonical_snRNA_bowtie.1.ebwt",
        config["species"]+"/snRNA/all_snRNA_index/all_snRNA_bowtie.1.ebwt",
        config["species"]+"/full_genome_annotation/full_annot.gtf.gz"


# rDNA
rule download_rRNA:
    threads:
        1
    params:
        rRNA=config["rDNA_sequence"],
        outdir=config["species"]+"/rRNA/rRNA_sequences",
        cluster= '-N 1 -c 1 --mem=16G -t 00:30:00'
    output:
        fasta=config["species"]+"/rRNA/rRNA_sequences/rRNA.fa"
    shell:
        """
        cd {params.outdir}
        datasets download gene symbol {params.rRNA}
        unzip ncbi_dataset.zip
        mv ncbi_dataset/data/rna.fna rRNA.fa
        rm -r ncbi_dataset.zip ncbi_dataset README.md
        """

rule rRNA_bowtie_index:
    input:
        config["species"]+"/rRNA/rRNA_sequences/rRNA.fa"
    threads:
        4
    params:
        outdir=config["species"]+"/rRNA/rRNA_index/rRNA_bowtie",
        cluster= '-N 1 -c 1 --mem=16G -t 00:30:00',
        log=config["species"]+"/logs"
    output:
        index=config["species"]+"/rRNA/rRNA_index/rRNA_bowtie.1.ebwt"
    shell:
        """
        mkdir -p {params.log}
        (bowtie-build {input} {params.outdir}) > {params.log}/rRNA_bowtie.log
        """

# snRNA
# canonical snRNAs canonical_snRNA_sequences
rule download_canon_snRNA:
    threads:
        1
    params:
        snRNA=config["canonical_snRNA_sequences"],
        outdir=config["species"]+"/snRNA/snRNA_sequences",
        cluster= '-N 1 -c 1 --mem=16G -t 00:30:00'
    output:
        fasta=config["species"]+"/snRNA/snRNA_sequences/canonical_snRNA.fa"
    shell:
        """
        cd {params.outdir}
        datasets download gene symbol {params.snRNA}
        unzip ncbi_dataset.zip
        mv ncbi_dataset/data/rna.fna canonical_snRNA.fa
        rm -r ncbi_dataset.zip ncbi_dataset README.md
        """

rule canon_snRNA_bowtie_index:
    input:
        config["species"]+"/snRNA/snRNA_sequences/canonical_snRNA.fa"
    threads:
        4
    params:
        outdir=config["species"]+"/snRNA/canonical_snRNA_index/canonical_snRNA_bowtie",
        cluster= '-N 1 -c 1 --mem=16G -t 00:30:00',
        log=config["species"]+"/logs"
    output:
        index=config["species"]+"/snRNA/canonical_snRNA_index/canonical_snRNA_bowtie.1.ebwt"
    shell:
        """
        mkdir -p {params.log}
        (bowtie-build {input} {params.outdir}) > {params.log}/canonical_snRNA_bowtie.log
        """

# mature snRNAs all
rule download_all_snRNA:
    threads:
        1
    params:
        snRNA=config["mature_snRNA_sequence"],
        snRNA_file=os.path.basename(config["mature_snRNA_sequence"]),
        snRNA_file_unzipped=os.path.basename(config["mature_snRNA_sequence"]).replace(".gz",""),
        oneline_snRNA=os.path.basename(config["mature_snRNA_sequence"]).replace(".fa.gz",".oneline.fa"),
        outdir=config["species"]+"/snRNA/snRNA_sequences",
        cluster= '-N 1 -c 1 --mem=16G -t 00:30:00'
    output:
        fasta=config["species"]+"/snRNA/snRNA_sequences/all_snRNA.fa"
    shell:
        """
        cd {params.outdir}
        wget {params.snRNA}
        gunzip {params.snRNA_file}
        ./../../../scripts/makeFastaOneLine.sh {params.snRNA_file_unzipped} {params.oneline_snRNA}
        grep -w -A 1 snRNA {params.oneline_snRNA} --no-group-separator > all_snRNA.fa
        rm {params.oneline_snRNA} {params.snRNA_file_unzipped}
        """

rule all_snRNA_bowtie_index:
    input:
        config["species"]+"/snRNA/snRNA_sequences/all_snRNA.fa"
    threads:
        4
    params:
        outdir=config["species"]+"/snRNA/all_snRNA_index/all_snRNA_bowtie",
        cluster= '-N 1 -c 1 --mem=16G -t 00:30:00',
        log=config["species"]+"/logs"
    output:
        index=config["species"]+"/snRNA/all_snRNA_index/all_snRNA_bowtie.1.ebwt"
    shell:
        """
        mkdir -p {params.log}
        (bowtie-build {input} {params.outdir}) > {params.log}/all_snRNA_bowtie.log
        """

# Download all annotation
rule download_all_annotation:
    threads:
        1
    params:
        annot=config["genome_annotation"],
        basename_annot=os.path.basename(config["genome_annotation"]),
        outdir=config["species"]+"/full_genome_annotation",
        cluster= '-N 1 -c 1 --mem=16G -t 00:30:00'
    output:
        fasta=config["species"]+"/full_genome_annotation/full_annot.gtf.gz"
    shell:
        """
        cd {params.outdir}
        wget {params.annot}
        mv {params.basename_annot} {output.fasta}
        """

# immature snRNA (genomic flanks)

# tRNA


# chrM



# genome minus chrM

